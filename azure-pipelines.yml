trigger:
- main

parameters:

- name: environment
  displayName: Select environment to create infra resources
  type: string
  values:
    - UAT
    - Prod

- name: action
  displayName: Select Action - Apply or destroy resources
  type: string
  values:
    - Apply
    - Destroy

pool: default

variables:
    - group: terraform-secrets

stages:
  - stage: TerraformApply
    displayName: Terraform plan deployment resource
    condition: eq('${{ parameters.action }}', 'apply')
    jobs:
      - job: init_plan
        displayName: Terraform plan deployment
        steps:
          - checkout: self
          - script: |
              terraform init
              terraform workspace select ${{ parameters.environment }} || terraform workspace new ${{ parameters.environment }}
              terraform plan -var-file=./envs/${{ parameters.environment }}/${{ parameters.environment }}-vars.tfvars
            displayName: 'Terraform plan deployment'
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET_VALUE)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(ARM_TENANT_ID)

      - deployment: apply
        displayName: Terraform apply deployment
        dependsOn: init_plan
        condition: succeeded()
        environment: ${{ parameters.environment }} 
        strategy:
          runOnce:
            deploy:      
              steps:
                - checkout: self
                - script: |
                    terraform init
                    terraform workspace select ${{ parameters.environment }}
                    terraform apply -var-file=./envs/${{ parameters.environment }}/${{ parameters.environment }}-vars.tfvars -auto-approve
                  displayName: 'Terraform apply deployment'
                  env:
                    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
                    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                    ARM_TENANT_ID: $(ARM_TENANT_ID)

  - stage: TerraformDestroy
    displayName: Terraform destroy deployment
    condition: eq('${{ parameters.action }}', 'destroy')
    jobs:
      - deployment: destroy
        displayName: Terraform destroy deployment
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    terraform init
                    terraform workspace select ${{ parameters.environment }}
                    terraform destroy -var-file=./envs/${{ parameters.environment }}/${{ parameters.environment }}-vars.tfvars -auto-approve
                  displayName: 'Terraform destroy deployment'
                  env:
                    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
                    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                    ARM_TENANT_ID: $(ARM_TENANT_ID)
